<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Spring</title>
  <link rel="alternate" href="https://spring.io/blog" />
  <link rel="self" href="https://spring.io/blog.atom" />
  <id>http://spring.io/blog.atom</id>
  <icon>https://spring.io/favicon.ico</icon>
  <updated>2014-09-07T17:56:25Z</updated>
  <entry>
    <title>Spring IO Platform 1.0.2 released</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/07/spring-io-platform-1-0-2-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Andy Wilkinson</name>
    </author>
    <id>tag:spring.io,2014-09-07:1753</id>
    <updated>2014-09-07T17:56:25Z</updated>
    <content type="html">&lt;p&gt;We are pleased to announce the latest maintenance release of Spring IO Platform is now available from both &lt;a href="http://repo.spring.io/release"&gt;repo.spring.io&lt;/a&gt; and &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Cg%3Aio.spring.platform"&gt;Maven Central&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;This release upgrades the versions of a number of the projects in the Platform to pick up their latest maintenance releases:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reactor 1.1.4&lt;/li&gt;
&lt;li&gt;Reactor Spring 1.1.3&lt;/li&gt;
&lt;li&gt;Spring AMQP 1.3.6&lt;/li&gt;
&lt;li&gt;Spring Boot 1.1.6&lt;/li&gt;
&lt;li&gt;Spring Data Dijkstra SR4&lt;/li&gt;
&lt;li&gt;Spring Framework 4.0.7&lt;/li&gt;
&lt;li&gt;Spring Integration 4.0.4&lt;/li&gt;
&lt;li&gt;Spring Security 3.2.5&lt;/li&gt;
&lt;li&gt;Spring Security OAuth 2.0.3&lt;/li&gt;
&lt;li&gt;Spring Web Flow 2.4.1&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The versions of many third-party dependencies have also been updated.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://platform.spring.io/platform"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-io/platform"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-io/platform/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://docs.spring.io/platform/docs/1.0.2.RELEASE/reference/htmlsingle"&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Join us at the Spring Data birds-of-a-feather session @springone2gx #s2gx</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/05/join-us-at-the-spring-data-birds-of-a-feather-session-springone2gx-s2gx" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Greg Turnquist</name>
    </author>
    <id>tag:spring.io,2014-09-04:1749</id>
    <updated>2014-09-05T19:45:50Z</updated>
    <content type="html">&lt;p&gt;Are you ready for &lt;a href="http://springone2gx.com"&gt;SpringOne&lt;/a&gt;? It's almost here!&lt;/p&gt;

&lt;p&gt;A popular part of SpringOne are the birds-of-a-feather sessions. Different groups get together to talk about different aspects of Spring, Groovy, and Grails. This year, they are scheduled for Tuesday night, September 9th, starting at 9pm. (When do they end? When everyone finally leaves!) &lt;/p&gt;

&lt;p&gt;They are indeed popular. Last year I sat in on the Spring Framework one and enjoyed the close, unscripted discussions (not lectures). You should think about carving out some time for that!&lt;/p&gt;

&lt;p&gt;This year, we have a new session planned: &lt;strong&gt;Spring Data&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;If you aren't aware, the Spring Data release train has now grown to include eleven modules: Commons, JPA, MongoDB, Neo4j, Solr, Couchbase, Cassandra, Elasticsearch, Gemfire, Redis, and REST. Whew, that's a lot!&lt;/p&gt;

&lt;p&gt;Spring Data has grown in popularity throughout the community. If you're interested in chatting with some of the project leads (can't guarantee they will ALL be this session) as well as other members of the Spring Data community, plan some time to join us!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; It's not too late! Hurry up and &lt;a href="https://2014.event.springone2gx.com/register"&gt;register today&lt;/a&gt;!&lt;/p&gt;
&lt;/blockquote&gt;</content>
  </entry>
  <entry>
    <title>Spring AMQP (for Java) 1.4 Milestone 1 Available</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/05/spring-amqp-for-java-1-4-milestone-1-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Gary Russell</name>
    </author>
    <id>tag:spring.io,2014-09-04:1750</id>
    <updated>2014-09-05T16:08:00Z</updated>
    <content type="html">&lt;p&gt;We are pleased to announce that the first milestone of Spring AMQP 1.4 is now available.&lt;/p&gt;

&lt;h2&gt;
&lt;a name="user-content-key-features" class="anchor" href="#key-features" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Key Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Annotation-based message listeners (&lt;code&gt;@RabbitListener&lt;/code&gt;), enabled with either &lt;code&gt;@EnableRabbit&lt;/code&gt; or &lt;code&gt;&amp;lt;rabbit:annotation-driven /&amp;gt;&lt;/code&gt; (see below for an example).&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;RabbitMessagingTemplate&lt;/code&gt; allowing interaction with &lt;code&gt;RabbitMQ&lt;/code&gt; using &lt;code&gt;spring-messaging&lt;/code&gt; &lt;code&gt;Message&lt;/code&gt; objects.&lt;/li&gt;
&lt;li&gt;A new factory bean to ease the configuration of SSL with the &lt;code&gt;RabbitConnectionFactory&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Log4j Appender now supports configuration of message persistence.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Here is a simple example for a POJO service using the new annotations:&lt;/p&gt;

&lt;div class="highlight highlight-java"&gt;&lt;pre&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyService&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="nd"&gt;@RabbitListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queues&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"fooQ"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;capitalize&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toUpperCase&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="nd"&gt;@Configuration&lt;/span&gt;
&lt;span class="nd"&gt;@EnableRabbit&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;EnableRabbitConfig&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="nd"&gt;@Bean&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;SimpleRabbitListenerContainerFactory&lt;/span&gt; &lt;span class="nf"&gt;rabbitListenerContainerFactory&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;SimpleRabbitListenerContainerFactory&lt;/span&gt; &lt;span class="n"&gt;factory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;SimpleRabbitListenerContainerFactory&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setConnectionFactory&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rabbitConnectionFactory&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Bean&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;MyService&lt;/span&gt; &lt;span class="nf"&gt;myService&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;MyService&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Rabbit infrastructure setup&lt;/span&gt;

    &lt;span class="nd"&gt;@Bean&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;ConnectionFactory&lt;/span&gt; &lt;span class="nf"&gt;rabbitConnectionFactory&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;CachingConnectionFactory&lt;/span&gt; &lt;span class="n"&gt;connectionFactory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;CachingConnectionFactory&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;connectionFactory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setHost&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"localhost"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;connectionFactory&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;See the &lt;a href="https://jira.spring.io/secure/ReleaseNote.jspa?projectId=10450&amp;amp;version=14522"&gt;Release Notes&lt;/a&gt; and the &lt;a href="http://projects.spring.io/spring-amqp/"&gt;Project Page&lt;/a&gt; for more information.&lt;/p&gt;

&lt;p&gt;A minor &lt;a href="https://jira.spring.io/secure/ReleaseNote.jspa?projectId=10450&amp;amp;version=14640"&gt;1.3.6 Maintenance Release&lt;/a&gt; is also available.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Integration 4.1 Milestone 1 Available</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/05/spring-integration-4-1-milestone-1-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Artem Bilan</name>
    </author>
    <id>tag:spring.io,2014-09-05:1752</id>
    <updated>2014-09-05T10:01:00Z</updated>
    <content type="html">&lt;p&gt;Dear Spring community,&lt;/p&gt;

&lt;p&gt;We are pleased to announce that Spring Integration 4.1 Milestone 
1 has been released. Please use the &lt;a href="http://repo.springsource.org/milestone"&gt;Milestone Repository&lt;/a&gt; with Maven or Gradle,
download a 
&lt;a href="http://repo.spring.io/milestone/org/springframework/integration/spring-integration/4.1.0.M1"&gt;distribution archive&lt;/a&gt;,
or see the project &lt;a href="http://projects.spring.io/spring-integration"&gt;home page&lt;/a&gt; for links to the updated documentation, 
and Maven/Gradle configuration details.&lt;/p&gt;

&lt;p&gt;The release includes some new features and further improvements, as well as a number of bug fixes, with the GA release due 
around the end of October.&lt;/p&gt;

&lt;p&gt;Here is a summary of major changes:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spring Framework 4.1&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Spring Integration takes advantage of a number of new features in Spring Framework 4.1 and requires that release.&lt;/p&gt;

&lt;p&gt;The changes include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;migration of additional Spring Integration APIs to the Core Spring Messaging module and the Spring Integration equivalents are deprecated&lt;br&gt;
or removed to avoid confusion in the target applications;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;a number of Messaging performance improvements have been included in Spring Framework 4.1.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Spring Framework 4.1 introduced the &lt;a href="http://docs.spring%0A.io/spring/docs/current/spring-framework-reference/html/expressions.html#expressions-spel-compilation"&gt;SpEL Compiler&lt;/a&gt;. 
It is very useful for Spring Integration, which extensively uses SpEL at runtime. You can enable the SpEL Compiler using the 
&lt;code&gt;spring.expression.compiler.mode&lt;/code&gt; System Property with a value of &lt;code&gt;IMMEDIATE&lt;/code&gt; or &lt;code&gt;MIXED&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;WebSocket Adapters&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;WebSocket Inbound and Outbound Channel Adapters have been introduced. They are built on the Spring WebSocket 
and Messaging foundation.&lt;/p&gt;

&lt;p&gt;One of the key feature of WebSockets that it is a &lt;code&gt;streaming&lt;/code&gt; protocol and from Java perspective it is based on the 
same API as from server side as well as from client side, so, we can build integration flows using similar components
on both sides:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Server side&lt;/em&gt;&lt;/p&gt;

&lt;div class="highlight highlight-java"&gt;&lt;pre&gt;&lt;span class="nd"&gt;@Configuration&lt;/span&gt;
&lt;span class="nd"&gt;@EnableIntegration&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ServerConfig&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="nd"&gt;@Bean&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;ServerWebSocketContainer&lt;/span&gt; &lt;span class="nf"&gt;serverWebSocketContainer&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ServerWebSocketContainer&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/ws"&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;withSockJs&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Bean&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;MessageProducer&lt;/span&gt; &lt;span class="nf"&gt;webSocketInboundChannelAdapter&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;WebSocketInboundChannelAdapter&lt;/span&gt; &lt;span class="n"&gt;webSocketInboundChannelAdapter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
                    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;WebSocketInboundChannelAdapter&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serverWebSocketContainer&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;webSocketInboundChannelAdapter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setOutputChannel&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;webSocketInputChannel&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;webSocketInboundChannelAdapter&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Bean&lt;/span&gt;
    &lt;span class="nd"&gt;@Transformer&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inputChannel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"webSocketInputChannel"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;outputChannel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"webSocketOutputChannel"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;ExpressionEvaluatingTransformer&lt;/span&gt; &lt;span class="nf"&gt;transformer&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ExpressionEvaluatingTransformer&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PARSER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parseExpression&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"'Hello ' + payload"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Bean&lt;/span&gt;
    &lt;span class="nd"&gt;@ServiceActivator&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inputChannel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"webSocketOutputChannel"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;MessageHandler&lt;/span&gt; &lt;span class="nf"&gt;webSocketOutboundMessageHandler&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;WebSocketOutboundMessageHandler&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serverWebSocketContainer&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Client side&lt;/em&gt;&lt;/p&gt;

&lt;div class="highlight highlight-java"&gt;&lt;pre&gt;&lt;span class="nd"&gt;@Configuration&lt;/span&gt;
&lt;span class="nd"&gt;@EnableIntegration&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ClientConfig&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nd"&gt;@Bean&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;WebSocketClient&lt;/span&gt; &lt;span class="nf"&gt;webSocketClient&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;SockJsClient&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Collections&lt;/span&gt;&lt;span class="o"&gt;.&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Transport&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;singletonList&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
                        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;WebSocketTransport&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;JettyWebSocketClient&lt;/span&gt;&lt;span class="o"&gt;())));&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Bean&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IntegrationWebSocketContainer&lt;/span&gt; &lt;span class="nf"&gt;clientWebSocketContainer&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ClientWebSocketContainer&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;webSocketClient&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="s"&gt;"ws://host:port/ws"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Bean&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;MessageProducer&lt;/span&gt; &lt;span class="nf"&gt;webSocketInboundChannelAdapter&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;WebSocketInboundChannelAdapter&lt;/span&gt; &lt;span class="n"&gt;webSocketInboundChannelAdapter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
                &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;WebSocketInboundChannelAdapter&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clientWebSocketContainer&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;webSocketInboundChannelAdapter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setOutputChannel&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;webSocketInputChannel&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;webSocketInboundChannelAdapter&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Bean&lt;/span&gt;
    &lt;span class="nd"&gt;@ServiceActivator&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inputChannel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"webSocketOutputChannel"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;MessageHandler&lt;/span&gt; &lt;span class="nf"&gt;webSocketOutboundMessageHandler&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;WebSocketOutboundMessageHandler&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clientWebSocketContainer&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Another simple way to integrate with Spring WebSockets and STOMP sub-protocol but use integration flows
to process requests and send responses is based on &lt;code&gt;@MessageMapping&lt;/code&gt; annotation, 
but on the &lt;code&gt;@MessagingGateway&lt;/code&gt; interface:&lt;/p&gt;

&lt;div class="highlight highlight-java"&gt;&lt;pre&gt;&lt;span class="nd"&gt;@MessagingGateway&lt;/span&gt;
&lt;span class="nd"&gt;@Controller&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;WebSocketGateway&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="nd"&gt;@MessageMapping&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/greeting"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nd"&gt;@SendToUser&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/queue/answer"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nd"&gt;@Gateway&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requestChannel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"greetingChannel"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;greeting&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Reactor support&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Promise&amp;lt;?&amp;gt;&lt;/code&gt; Gateway has been added to support &lt;a href="https://github.com/reactor/reactor/wiki"&gt;Project Reactor&lt;/a&gt;.
Now Spring Integration message flows can be used as a part of &lt;code&gt;Reactive Streams&lt;/code&gt;:&lt;/p&gt;

&lt;div class="highlight highlight-java"&gt;&lt;pre&gt;&lt;span class="nd"&gt;@MessagingGateway&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reactorEnvironment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"reactorEnv"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;PromiseGateway&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="nd"&gt;@Gateway&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requestChannel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"promiseChannel"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;multiply&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="nd"&gt;@ServiceActivator&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inputChannel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"promiseChannel"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Integer&lt;/span&gt; &lt;span class="nf"&gt;multiply&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="n"&gt;Streams&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;defer&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;asList&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"2"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"3"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"4"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"5"&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;map&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;Integer:&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;parseInt&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;mapMany&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;integer&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;promiseGateway&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;multiply&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;integer&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;collect&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;consume&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;integers&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;...)&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;flush&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In addition, support of Spring Framework &lt;code&gt;ListenableFuture&amp;lt;?&amp;gt;&lt;/code&gt; gateway method return types has been added.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Boon JSON mapper&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://github.com/RichardHightower/boon/wiki"&gt;Boon&lt;/a&gt; &lt;code&gt;JsonObjectMapper&lt;/code&gt; implementation has been added for the 
JSON Transformers. Boon has been shown to have better JSON mapping performance than Jackson. It is enabled in Spring Integration 
automatically by detection of its jar in the classpath. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Splitter Iterator&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;splitter&amp;gt;&lt;/code&gt;s now can return &lt;code&gt;Iterator&amp;lt;?&amp;gt;&lt;/code&gt; and &lt;code&gt;Iterable&amp;lt;?&amp;gt;&lt;/code&gt; as a &lt;code&gt;payload&lt;/code&gt; to achieve &lt;code&gt;streaming&lt;/code&gt; behaviour, 
when each item is emitted as reply message using &lt;code&gt;Iterator.next()&lt;/code&gt;.  &lt;/p&gt;

&lt;p&gt;In addition we have released two maintenance versions 
&lt;a href="https://jira.spring.io/secure/ReleaseNote.jspa?projectId=10121&amp;amp;version=14666"&gt;3.0.5&lt;/a&gt; and 
&lt;a href="https://jira.spring.io/secure/ReleaseNote.jspa?projectId=10121&amp;amp;version=14665"&gt;4.0.4&lt;/a&gt;. 
It's strongly recommended to upgrade to the latest versions as they include some critical fixes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wrapping up&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For a complete list of changes refer to the 
&lt;a href="https://jira.spring.io/secure/ReleaseNote.jspa?projectId=10121&amp;amp;version=14513"&gt;release notes&lt;/a&gt;,
&lt;a href="http://docs.spring.io/spring-integration/docs/4.1.0.M1/reference/html/whats-new.html"&gt;What's New&lt;/a&gt; and
&lt;a href="http://docs.spring.io/spring-integration/docs/4.1.0.M1/api"&gt;Java Docs&lt;/a&gt; of the new components.&lt;/p&gt;

&lt;p&gt;Don't miss, of course, the 
&lt;a href="https://github.com/spring-projects/spring-integration/wiki/Spring-Integration-4.0-to-4.1-Migration-Guide"&gt;Migration Guild&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We look forward to your comments and feedback (&lt;a href="http://stackoverflow.com"&gt;StackOverflow&lt;/a&gt; (&lt;code&gt;spring-integration&lt;/code&gt; tag), 
&lt;a href="https://jira.spring.io/browse/INT"&gt;Spring JIRA&lt;/a&gt;)
as soon as possible and report issues you find before we GA towards over a couple months.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SpringOne 2GX 2014&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Some of those mentioned topics are being covered at SpringOne next week. Please attend &lt;a href="https://2014.event.springone2gx.com/schedule/sessions/spring_integration_java_configuration_and_more.html"&gt;Gary Russell's Session&lt;/a&gt; 
to learn more about these and other Spring Integration improvements added in the last 12 months.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Boot 1.1.6 released</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/05/spring-boot-1-1-6-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Phil Webb</name>
    </author>
    <id>tag:spring.io,2014-09-05:1751</id>
    <updated>2014-09-05T04:22:21Z</updated>
    <content type="html">&lt;p&gt;We are pleased to announce that Spring Boot 1.1.6 has been released and is available from &lt;a href="http://repo.spring.io/release"&gt;repo.spring.io&lt;/a&gt; and &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.springframework.boot%22"&gt;Maven Central&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;This release closes almost 50 reported issues and is a recommended upgrade for all Spring Boot users. For a complete list of changes please refer to the &lt;a href="https://github.com/spring-projects/spring-boot/issues?q=milestone%3A1.1.6"&gt;issue tracker&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://projects.spring.io/spring-boot/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-boot/docs/1.1.6.RELEASE/reference/htmlsingle"&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Framework 4.1 GA is here!</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/04/spring-framework-4-1-ga-is-here" />
    <category term="releases" label="Releases" />
    <author>
      <name>Juergen Hoeller</name>
    </author>
    <id>tag:spring.io,2014-09-04:1748</id>
    <updated>2014-09-04T12:55:00Z</updated>
    <content type="html">&lt;p&gt;Dear Spring community,&lt;/p&gt;

&lt;p&gt;I'm pleased to announce that after an intense release candidate phase, the Spring Framework 4.1 GA release is now available!&lt;/p&gt;

&lt;p&gt;Our 4.1 generation delivers &lt;b&gt;major new features along several themes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Annotated JMS listener methods&lt;/li&gt;
&lt;li&gt;Comprehensive support for JCache (JSR-107) annotations&lt;/li&gt;
&lt;li&gt;Flexible resolution and transformation of static web resources&lt;/li&gt;
&lt;li&gt;MVC views: declarative resolution, Groovy markup templates, Jackson's JsonView&lt;/li&gt;
&lt;li&gt;WebSocket refinements: WebSocket scope, SockJS client support, WebSocket stats&lt;/li&gt;
&lt;li&gt;Performance: SpEL compiler mode, concurrency fine-tuning across the container&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;And as always, 4.1 also comes with &lt;b&gt;a lot of enhancements in the details&lt;/b&gt;, for example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Direct field binding support with auto-growing for nested fields&lt;/li&gt;
&lt;li&gt;Java 8's Optional for injection points and MVC handler parameters&lt;/li&gt;
&lt;li&gt;Support for the standard @Priority annotation for dependency ordering and selection&lt;/li&gt;
&lt;li&gt;Annotated @Lookup methods with support for provided constructor arguments&lt;/li&gt;
&lt;li&gt;Declarative SQL scripts and programmatic transactions in the TestContext framework&lt;/li&gt;
&lt;li&gt;Enhanced Hibernate JPA setup: isolation levels, discovery of managed packages&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Many of those topics have been covered in recent blog posts already and will also be prominently featured at our &lt;b&gt;&lt;a href="http://www.springone2gx.com/"&gt;SpringOne2GX 2014&lt;/a&gt; show in Dallas next week!&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;We recommend an early upgrade since the 4.1 line is the primary maintenance branch now, immediately superseding the 4.0.x line. For a more conservative upgrade path, we have co-released 4.0.7 with 4.1 GA - as an intermediate step on your way to 4.1 proper.&lt;/p&gt;

&lt;p&gt;Note that Spring Framework 4.1 does not raise the fundamental system requirements: It is still &lt;b&gt;Java 6+, Servlet 2.5+, JPA 2.0+&lt;/b&gt; as outlined for the original Spring Framework 4.0 release, which means it happily runs even on WebSphere 7!&lt;/p&gt;

&lt;p&gt;Cheers,&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - September 2nd, 2014</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/03/this-week-in-spring-september-2nd-2014" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2014-09-03:1747</id>
    <updated>2014-09-03T05:24:12Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! &lt;/p&gt;

&lt;p&gt;This is the last installment of &lt;em&gt;TWiS&lt;/em&gt; before &lt;a href="http://springone2gx.com/"&gt;SpringOne2GX 2014&lt;/a&gt; kicks off next week! I, personally, am &lt;em&gt;very&lt;/em&gt; excited! I can't wait to see you all there. This is going to be so much fun. So, let's get on to it!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Spring Data lead Oliver Gierke has just &lt;a href="https://spring.io/blog/2014/08/27/spring-data-dijkstra-sr4-released"&gt;announced the release of Spring Data Dijkstra SR4&lt;/a&gt;, filled with bug-fixes and all sorts of upgrade-now-worthy stuff. Check it out! &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://spring.io/blog/2014/08/28/spring-tool-suite-and-groovy-grails-tool-suite-3-6-1-released"&gt;Spring and Groovy &amp;amp; Grails Tool Suite lead Martin Lippert just announced 3.6.1&lt;/a&gt;.  The new release updates tcServer to 3.0.0, includes build performance improvements, annotation processors for AspectJ and AJDT, and more. Download now, and have the latest and greatest IDE to follow along &lt;a href="http://spring.io/guides"&gt;all the guides&lt;/a&gt; and follow the &lt;a href="http://springone2gx.com"&gt;examples at SpringOne2GX 2014&lt;/a&gt;! &lt;/li&gt;
&lt;li&gt;I hope you'll &lt;a href="https://spring.io/blog/2014/07/29/webinar-microservices-with-spring-boot-sept-16th"&gt; join me September 16th for a webinar looking at building microservices with Spring&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;On September 23rd, join Joram Barrez and I for a webinar looking at &lt;a href="https://spring.io/blog/2014/07/29/webinar-process-driven-spring-applications-with-activiti-sept-23rd"&gt;how to build process-centric Spring applications with the open-source BPMN2 engine, Activiti&lt;/a&gt;&lt;br&gt;
&lt;/li&gt;
&lt;li&gt;Did you see the &lt;a href="http://start.spring.io/"&gt;beautiful, more intuitive, new Spring Initializr&lt;/a&gt;?? Preetttyyyyyy...&lt;br&gt;
&lt;/li&gt;
&lt;li&gt;The sleepless &lt;a href="https://spring.io/blog/2014/09/01/spring-security-oauth-2-0-3-available-now"&gt;Dr. Syer has just released Spring Security OAuth 2.0.3&lt;/a&gt;, which includes a mainly bug fix   for JWT tokens. Also, resource servers (if configured with &lt;code&gt;@Configuration&lt;/code&gt;) will check the validty of the client and scopes before allowing access to protected resources, which means more instantaneous client privilege revocation. Nice!&lt;/li&gt;
&lt;li&gt;Spring ninja Greg Turnquist has written a nice post &lt;a href="https://spring.io/blog/2014/09/02/spring-guides-make-it-easier-to-jump-to-core-content"&gt;about the ever improving Spring IO guides&lt;/a&gt;. Start there, then continue on to some of the guides themselves! &lt;/li&gt;
&lt;li&gt;I gave a presentation, &lt;em&gt;Have You Seen Spring Lately?&lt;/em&gt;, at DevNexus earlier this year. &lt;a href="http://www.infoq.com/presentations/spring-rest-nosql-big-data-mobile"&gt;It's online&lt;/a&gt;, and worth a watch if you haven't already! (If I may say so..)&lt;/li&gt;
&lt;li&gt;Lieven Doclo has put together a &lt;em&gt;very&lt;/em&gt; cool post on his &lt;a href="http://java.dzone.com/articles/another-spring-boot"&gt;Spring Boot auto-configuration for the Axon framework&lt;/a&gt;. Axon is an implementation of the CQRS (Command and Query Responsibility Segregation) pattern. (Axon is built on Spring, Spring Integration, and more, as readers of this column will know from previous roundups!)&lt;br&gt;
&lt;/li&gt;
&lt;li&gt;MacAdie Web Blog has a rough, but very useful, recap of &lt;a href="http://www.macadie.net/2014/08/26/spring-boot-presentation-at-austingug/"&gt;notes taken at an  Austin Groovy and Grails User Group meeting on Spring Boot&lt;/a&gt;. &lt;/li&gt;
&lt;li&gt;  I liked Ralph Wehner's post &lt;a href="http://rwehner.wordpress.com/2014/08/26/combining-vaadin-and-classic-spring-mvc-into-one-simple-spring-boot-application/"&gt;introducing how to use Spring Boot and Vaadin together&lt;/a&gt;: it explains everything &lt;a href="http://github.com/rwe17/spring-boot-vaadin-demo"&gt;and even links to a sample example&lt;/a&gt; - awesome!&lt;/li&gt;
&lt;li&gt; Our pals at the Jayway blog are back at it again! This week, &lt;a href="http://www.jayway.com/2014/07/22/spring-boot-custom-healthindicator/"&gt;they've introduced how to build a custom Spring Boot &lt;code&gt;HealthIndicator&lt;/code&gt;s&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;The &lt;code&gt;IT Hood&lt;/code&gt; chimes in with a helpful hint: if you're getting mysterious errors like &lt;a href="http://ithood.blogspot.com/2014/08/java-spring-mvc-networkerror-406-not.html"&gt;HTTP status code &lt;code&gt;406 Not Acceptable&lt;/code&gt; results when calling a Spring MVC-powered REST endpoint, you might check that you have the right dependencies on the CLASSPATH&lt;/a&gt;. Simple, but easy to forget! (unless, of course, you're using the &lt;a href="https://spring.io/blog/2014/06/26/introducing-the-spring-io-platform"&gt;Spring IO Platform BOM&lt;/a&gt; or &lt;a href="http://start.spring.io/"&gt;Spring Boot's starter dependencies&lt;/a&gt;!).&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Spring guides make it easier to jump to core content</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/02/spring-guides-make-it-easier-to-jump-to-core-content" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Greg Turnquist</name>
    </author>
    <id>tag:spring.io,2014-09-02:1746</id>
    <updated>2014-09-02T20:01:00Z</updated>
    <content type="html">&lt;p&gt;If you remember last year, we rolled out a &lt;a href="http://spring.io/blog/2013/10/23/the-spring-io-site"&gt;powerful new website&lt;/a&gt; built top-to-bottom with Spring. It was fresh, new, and loaded with gobs of &lt;a href="http://spring.io/guides"&gt;getting started guides&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Since then, the feedback has been overwhelmingly positive. We've had record traffic with a large portion visiting the guides. So what's new?&lt;/p&gt;

&lt;p&gt;We recently added the ability to hide/show the build steps. Many people expressed the desire to skip project setup steps and instead jump to the core content. We listened and responded.&lt;/p&gt;

&lt;p&gt;After reading over a guide, do you need Gradle or Maven build steps? No problem! Just click on the appropriate header, and the steps will expand and show you the extra bits. To top it off, the website uses HTML local storage to remember the choice you made. Surf to another guide and you'll see the same perspective. &lt;/p&gt;

&lt;p&gt;Hopefully, this slims things down to your preference.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Security OAuth 2.0.3 Available Now</title>
    <link rel="alternate" href="https://spring.io/blog/2014/09/01/spring-security-oauth-2-0-3-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>Dave Syer</name>
    </author>
    <id>tag:spring.io,2014-09-01:1745</id>
    <updated>2014-09-01T07:39:00Z</updated>
    <content type="html">&lt;p&gt;Spring Security OAuth 2.0.3 is available now in all the usual Maven repositories. It's a bug fix release, nothing major, so upgrading from 2.0.x should be painless (and is recommended). Some people were having issues getting JWT tokens to work properly, and those should be fixed. The only noteworthy functional change is that Resource Servers (if configured with &lt;code&gt;@Configuration&lt;/code&gt;) will now check the validity of the client and scopes before allowing access to protected resources. This means that client privileges can be revoked quickly, but may also lead to a performance penalty (so caching the &lt;code&gt;ClientDetailsService&lt;/code&gt; results would be recommended).&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Tool Suite and Groovy/Grails Tool Suite 3.6.1 released</title>
    <link rel="alternate" href="https://spring.io/blog/2014/08/28/spring-tool-suite-and-groovy-grails-tool-suite-3-6-1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Martin Lippert</name>
    </author>
    <id>tag:spring.io,2014-08-28:1744</id>
    <updated>2014-08-28T08:29:57Z</updated>
    <content type="html">&lt;p&gt;Dear Spring Community,&lt;/p&gt;

&lt;p&gt;I am happy to announce the new release of our Eclipse-based tooling today:
The Spring Tool Suite (STS) 3.6.1 and the Groovy/Grails Tool Suite (GGTS) 3.6.1.&lt;/p&gt;

&lt;p&gt;Highlights from this release include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;updated to tc Server 3.0.0&lt;/li&gt;
&lt;li&gt;performance improvements for building Spring projects&lt;/li&gt;
&lt;li&gt;AspectJ/AJDT now support annotation processors&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;To download the distributions, please go visit:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Spring Tool Suite: &lt;a href="https://spring.io/tools/sts/all"&gt;https://spring.io/tools/sts/all&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Groovy/Grails Tool Suite: &lt;a href="https://spring.io/tools/ggts/all"&gt;https://spring.io/tools/ggts/all&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Detailed new and noteworthy notes can be found here: &lt;a href="http://docs.spring.io/sts/nan/v361/NewAndNoteworthy.html"&gt;STS/GGTS 3.6.1 New &amp;amp; Noteworthy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;NOTE:
Both tool suites ship on top of the latest Eclipse Luna 4.4 release as 64bit and 32bit based zip files only.
There will be no native installers for STS/GGTS anymore.&lt;/p&gt;

&lt;p&gt;With the 3.6.0 release we shifted towards a slightly changed release schedule, shipping minor releases more frequently. Therefore 3.6.2 is scheduled to ship already in October, shortly after the Eclipse Luna SR1 release, followed by 3.6.3 in early Dezember and 3.6.4 in early March 2015, shortly after the Eclipse Luna SR2 release.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Data Dijkstra SR4 released</title>
    <link rel="alternate" href="https://spring.io/blog/2014/08/27/spring-data-dijkstra-sr4-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Oliver Gierke</name>
    </author>
    <id>tag:spring.io,2014-08-27:1743</id>
    <updated>2014-08-27T11:33:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the Spring Data team I am pleased to announce the availability of the fourth service release of the &lt;a href="https://github.com/spring-projects/spring-data-commons/wiki/Release-Train-Dijkstra"&gt;Dijkstra release train&lt;/a&gt;. It includes &lt;a href="https://jira.spring.io/issues/?filter=14757"&gt;36 fixes&lt;/a&gt; overall for the following modules:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Spring Data Commons 1.8.4 - &lt;a href="http://repo.spring.io/libs-release/org/springframework/data/spring-data-commons/1.8.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/1.8.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/1.8.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/1.8.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data JPA 1.6.4 - &lt;a href="http://repo.spring.io/libs-release/org/springframework/data/spring-data-jpa/1.6.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/1.6.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/1.6.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/1.6.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data MongoDB 1.5.4 - &lt;a href="http://repo.spring.io/libs-release/org/springframework/data/spring-data-mongodb/1.5.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/1.5.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/1.5.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/1.5.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data Neo4j 3.1.4 - &lt;a href="http://repo.spring.io/libs-release/org/springframework/data/spring-data-neo4j/3.1.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/3.1.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/3.1.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/3.1.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data Solr 1.2.4 - &lt;a href="http://repo.spring.io/libs-release/org/springframework/data/spring-data-solr/1.2.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/1.2.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/1.2.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/1.2.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data Couchbase 1.1.4 - &lt;a href="http://repo.spring.io/libs-release/org/springframework/data/spring-data-couchbase/1.1.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/1.1.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/1.1.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/1.1.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data Cassandra 1.0.4 - &lt;a href="http://repo.spring.io/libs-release/org/springframework/data/spring-data-cassandra/1.0.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.0.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.0.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.0.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data Elasticsearch 1.0.4 - &lt;a href="http://repo.spring.io/libs-release/org/springframework/data/spring-data-elasticsearch/1.0.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/1.0.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/1.0.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/1.0.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data Gemfire 1.4.4 - &lt;a href="http://repo.spring.io/libs-release/org/springframework/data/spring-data-gemfire/1.4.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/1.4.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/1.4.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/1.4.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data Redis 1.3.4 - &lt;a href="http://repo.spring.io/libs-release/org/springframework/data/spring-data-redis/1.3.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/1.3.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/1.3.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/1.3.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data REST 2.1.4 - &lt;a href="http://repo.spring.io/libs-release/org/springframework/data/spring-data-rest-webmvc/2.1.4.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/2.1.4.RELEASE/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/2.1.4.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/2.1.4.RELEASE/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The release is a recommended upgrade for all Dijkstra users as it contains a few important bug fixes. The next release coming will be the final release of the upcoming release train Evans.&lt;/p&gt;

&lt;p&gt;If you want to learn more about Spring Data, be sure to attend this year's SpringOne conference. The &lt;a href="https://2014.event.springone2gx.com/schedule/2014-09-09"&gt;schedule&lt;/a&gt; contains a lot of data-related talks to introduce you to the latest features we're going to ship with Evans.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - August 26th, 2014</title>
    <link rel="alternate" href="https://spring.io/blog/2014/08/26/this-week-in-spring-august-26th-2014" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2014-08-26:1742</id>
    <updated>2014-08-26T02:48:00Z</updated>
    <content type="html">&lt;p&gt;Holy cats! Can you believe how close we are to &lt;a href="http://springone2gx.com/"&gt;SpringOne2GX&lt;/a&gt;?   Last year we made a huge splash with the announcements of Spring Boot and Spring XD, both of which have recently hit 1.0 releases. I happen to know the next level looks like, and you're going to want to see it. Register now if you haven't already!  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Spring ninja Greg Turnquist wanted to &lt;a href="https://spring.io/blog/2014/08/21/building-a-restful-quotation-service-with-spring"&gt;replace one of the services used in the guides with something more family-friendly and so stood up a bespoke substitute using Spring&lt;/a&gt;!   This is a really nice read, check it out!&lt;/li&gt;
&lt;li&gt;I hope you'll &lt;a href="https://spring.io/blog/2014/07/29/webinar-microservices-with-spring-boot-sept-16th"&gt; join me September 16th for a webinar looking at building microservices with Spring&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;On September 23rd, join Joram Barrez and I for a webinar   looking at &lt;a href="https://spring.io/blog/2014/07/29/webinar-process-driven-spring-applications-with-activiti-sept-23rd"&gt;how to build process-centric Spring applications with the open-source BPMN2 engine, Activiti&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Patrick Grimard did a really nice job introducing &lt;a href="http://patrickgrimard.com/2014/08/14/how-to-build-a-spring-boot-application-using-intellij-idea/"&gt;how to build Spring Boot applications using IntelliJ IDEA&lt;/a&gt;. Pretty obvious, I hope, but it's nice to have it in one place. &lt;/li&gt;
&lt;li&gt;The &lt;em&gt;GeekAbyte&lt;/em&gt;   shows &lt;a href="http://geekabyte.blogspot.sg/2014/08/how-to-inject-objects-into-spring-mvc.html"&gt; how to implement a &lt;code&gt;HandlerMethodArgumentResolver&lt;/code&gt; in other to resolve and inject objects into Spring MVC controllers&lt;/a&gt;. This is a &lt;em&gt;really&lt;/em&gt; powerful technique if you need it.&lt;/li&gt;
&lt;li&gt;This looks interesting - a (Swiss?) German workshop on &lt;a href="http://techup.ch/1647/build-modern-web-apps-with-spring-io-and-angularjs"&gt;building modern web applications using Spring IO and Angular.js&lt;/a&gt;. I wish I could go! Check it out if you're in the area - I'd love to know how it went and if the recording and/or slides are going to be available.&lt;/li&gt;
&lt;li&gt;Our pal  Tomasz Nurkiewicz is at it again, this &lt;a href="http://www.javacodegeeks.com/2014/08/url-shortener-service-in-42-lines-of-code-in-java-spring-boot-redis.html"&gt;time with a look on building a URL shortner ("the new  'Hello, world!' in the IoT/microservice/era world" - ha!) in 42 lines of code&lt;/a&gt;. So... go, check it out! &lt;/li&gt;
&lt;li&gt;(Aforementioned Spring ninja) Greg Turnquist's writing a book on Spring Boot for PACKT, &lt;a href="http://blog.greglturnquist.com/2014/08/chapter-5-of-learning-springboot-almost-done.html"&gt;and he's just posted a summary of the latest chapter (on security) on his blog&lt;/a&gt;. This is exciting stuff - definitely intriguing, check it out! Rock on, Greg! (Did I mention he'll be &lt;a href="http://springone2gx.com/"&gt;at SpringOne2GX, too&lt;/a&gt;?)&lt;/li&gt;
&lt;li&gt;Pankaj Kumar introduces &lt;a href="http://www.journaldev.com/4144/spring-data-mongodb-example-tutorial"&gt;a simple  Spring Data MongoDB example in this post&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;This (Japanese-language) post (appears) to  &lt;a href="http://code-examples-ja.hateblo.jp/entry/2014/08/23/Spring_Framework_Dependency_Injection(%E4%BE%9D%E5%AD%98%E6%80%A7%E6%B3%A8%E5%85%A5)%E3%81%A8%E3%81%AF"&gt;introduce basic dependency injection with Spring&lt;/a&gt;). Could do... &lt;/li&gt;
&lt;li&gt;This (Portuguese-language) post introduces how to create &lt;a href="http://rodrigoportela.blog.br/2014/08/criando-um-securitycontext-para-testes-unitarios/"&gt;a Spring Security context in unit tests&lt;/a&gt;. This approach works, but readers should &lt;em&gt;definitely&lt;/em&gt; check out some of the cool stuff Spring Security lead &lt;a href="http://spring.io/team/rwinch"&gt;Rob Winch&lt;/a&gt; has &lt;a href="https://spring.io/blog/2014/05/23/preview-spring-security-test-web-security"&gt;been unveiling to support unit-testing secure applications recently&lt;/a&gt;...&lt;br&gt;
&lt;/li&gt;
&lt;li&gt;A few years ago I blogged about the amazing &lt;a href="https://spring.io/blog/2013/03/04/spring-at-china-scale-alibaba-group-alipay-taobao-and-tmall/"&gt;things the Alibaba group is doing to meet China-scale demand with Spring&lt;/a&gt;. They built an (open-source) framework called Dubbo (which sits on top of Spring), and this &lt;a href="http://www.kukujia.net/archives/389"&gt;(Mandarin-language) post has a (simple) example demonstrating its use&lt;/a&gt;. &lt;em&gt;Very&lt;/em&gt; cool!&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I am personally &lt;em&gt;super&lt;/em&gt; excited to &lt;a href="http://springone2gx.com"&gt;see Greg, Rob, the rest of the Spring team, and of course all of you, at SpringOne2GX&lt;/a&gt;! Register now if you haven't! &lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Building a RESTful quotation service with Spring</title>
    <link rel="alternate" href="https://spring.io/blog/2014/08/21/building-a-restful-quotation-service-with-spring" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Greg Turnquist</name>
    </author>
    <id>tag:spring.io,2014-08-20:1741</id>
    <updated>2014-08-21T20:05:00Z</updated>
    <content type="html">&lt;p&gt;I was recently made aware that a public API we were using for one of our guides contained objectionable material. After confirming this, I immediately responded that we would pick another source. Wishing to avoid such an issue in the future, I decided the best solution was to build our own RESTful quote service. So I decided to use the best tools to do so, the Spring stack, and was able to migrate the very next day.&lt;/p&gt;

&lt;h3&gt;
&lt;a name="user-content-picking-your-tools" class="anchor" href="#picking-your-tools" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Picking your tools&lt;/h3&gt;

&lt;p&gt;To kick things off, I made a check list of what I knew would be the right tools for the job of creating a RESTful web service.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://projects.spring.io/spring-data-jpa/"&gt;Spring Data JPA&lt;/a&gt; - quickly pre-load, fetch, and potentially update content&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://projects.spring.io/spring-framework/"&gt;Spring MVC&lt;/a&gt; - solid REST support since Spring 3&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://projects.spring.io/spring-boot/"&gt;Spring Boot&lt;/a&gt; - create all the needed components with little to no effort&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://start.spring.io"&gt;http://start.spring.io&lt;/a&gt; - assemble a project by simply checking the desired items on a form&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I quickly set aside the desire to add, delete, manage, or view the data through a web page. Instead, my focus was to serve up a fixed set of content with the exact same structure that the guide expected to consume.&lt;/p&gt;

&lt;h3&gt;
&lt;a name="user-content-picking-your-content" class="anchor" href="#picking-your-content" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Picking your content&lt;/h3&gt;

&lt;p&gt;The original content for the guide was a series of "Chunk Norris" jokes. I like a good laugh. But when I revisited the public API, I saw that several of the jokes were a bit rancid. After a brief discussion with colleagues, the idea came up to cite historical quotes. I took that idea and bent it a little. I had recently collected quotes from various developers about Spring Boot for personal reasons, so I decided to use that as the curated content.&lt;/p&gt;

&lt;h3&gt;
&lt;a name="user-content-time-to-code" class="anchor" href="#time-to-code" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Time to code!&lt;/h3&gt;

&lt;p&gt;To kick things off, I visited &lt;a href="http://start.spring.io"&gt;http://start.spring.io&lt;/a&gt;. This &lt;a href="https://github.com/spring-io/initializr"&gt;Spring Boot app&lt;/a&gt; lets you enter the details of your new project, pick the Java level, and select the Spring Boot starters you need. I used my checklist up above and created a new gradle-based project.&lt;/p&gt;

&lt;h4&gt;
&lt;a name="user-content-defining-your-domain" class="anchor" href="#defining-your-domain" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Defining your domain&lt;/h4&gt;

&lt;p&gt;With the project unpacked and imported into my IDE, the first thing I did was copy the &lt;a href="http://spring.io/guides/gs/messaging-reactor/#initial"&gt;domain objects shown in the Reactor guide&lt;/a&gt;. This way, I could ensure that the data sent out by my REST service was correct. Since the POJOs in my &lt;em&gt;Quoters Incorporated&lt;/em&gt; app are almost identical, I won't post them here.&lt;/p&gt;

&lt;p&gt;Then I created a Spring Data repository.&lt;/p&gt;

&lt;div class="highlight highlight-java"&gt;&lt;pre&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;QuoteRepository&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;CrudRepository&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Quote&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Long&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This empty interface definition handles &lt;code&gt;Quote&lt;/code&gt; objects with an internal primary key of type &lt;code&gt;Long&lt;/code&gt;. By extending the Spring Data Commons &lt;code&gt;CrudRepository&lt;/code&gt;, it inherits a fistful of database operations we'll use later on.&lt;/p&gt;

&lt;p&gt;Next step? Initialize some data. I created a &lt;code&gt;DatabaseLoader&lt;/code&gt; like this:&lt;/p&gt;

&lt;div class="highlight highlight-java"&gt;&lt;pre&gt;&lt;span class="nd"&gt;@Service&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DatabaseLoader&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;QuoteRepository&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="nd"&gt;@Autowired&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;DatabaseLoader&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QuoteRepository&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;repository&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@PostConstruct&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;save&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Quote&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Working with Spring Boot is like pair-programming with the Spring developers."&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="c1"&gt;// more quotes...&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;It's marked as a &lt;code&gt;@Service&lt;/code&gt; so it will be automatically picked up by &lt;code&gt;@ComponentScan&lt;/code&gt; when the app starts.&lt;/li&gt;
&lt;li&gt;It uses constructor injection with auto-wiring to ensure a copy of the &lt;code&gt;QuoteRepository&lt;/code&gt; is made available.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;@PostConstruct&lt;/code&gt; tells Spring MVC to run the data loading method after all beans have been created.&lt;/li&gt;
&lt;li&gt;Finally, the &lt;code&gt;init()&lt;/code&gt; method uses Spring Data JPA to create a whole slew of quotations.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Because I have H2 as my database of choice (&lt;strong&gt;com.h2database:h2&lt;/strong&gt;) in &lt;code&gt;build.gradle&lt;/code&gt;, there is no database set up at all (thanks to Spring Boot).&lt;/p&gt;

&lt;h4&gt;
&lt;a name="user-content-creating-a-controller" class="anchor" href="#creating-a-controller" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Creating a controller&lt;/h4&gt;

&lt;p&gt;After I built this database layer, I went on to create the APIs. With Spring MVC, it wasn't hard at all.&lt;/p&gt;

&lt;div class="highlight highlight-java"&gt;&lt;pre&gt;&lt;span class="nd"&gt;@RestController&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;QuoteController&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;QuoteRepository&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="n"&gt;Quote&lt;/span&gt; &lt;span class="n"&gt;NONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Quote&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"None"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="n"&gt;Random&lt;/span&gt; &lt;span class="n"&gt;RANDOMIZER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Random&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

    &lt;span class="nd"&gt;@Autowired&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;QuoteController&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QuoteRepository&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;repository&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@RequestMapping&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/api"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RequestMethod&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;GET&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;QuoteResource&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;getAll&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;StreamSupport&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findAll&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;spliterator&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
            &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;map&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;QuoteResource&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"success"&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;
            &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;collect&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Collectors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toList&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@RequestMapping&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/api/{id}"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RequestMethod&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;GET&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;QuoteResource&lt;/span&gt; &lt;span class="nf"&gt;getOne&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;@PathVariable&lt;/span&gt; &lt;span class="n"&gt;Long&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;exists&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;QuoteResource&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findOne&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="s"&gt;"success"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;QuoteResource&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NONE&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Quote "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;" does not exist"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@RequestMapping&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/api/random"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RequestMethod&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;GET&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;QuoteResource&lt;/span&gt; &lt;span class="nf"&gt;getRandomOne&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;getOne&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nextLong&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="nf"&gt;nextLong&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;lowerRange&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;upperRange&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="o"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;RANDOMIZER&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;nextDouble&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;upperRange&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;lowerRange&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;lowerRange&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Let's break it down:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The whole class is flagged as a &lt;code&gt;@RestController&lt;/code&gt;. This means all routes return objects not views.&lt;/li&gt;
&lt;li&gt;I have some static objects, particular a &lt;code&gt;NONE&lt;/code&gt; quote and a Java 8 &lt;code&gt;Random&lt;/code&gt; for randomly picking quotes.&lt;/li&gt;
&lt;li&gt;It uses constructor injection to get a hold of &lt;code&gt;QuoteRepository&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;API&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;/api&lt;/td&gt;
&lt;td&gt;Fetch ALL quotes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/api/{id}&lt;/td&gt;
&lt;td&gt;Fetch quote &lt;strong&gt;id&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/api/random&lt;/td&gt;
&lt;td&gt;Fetch a random quote&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;p&gt;To fetch ALL quotes, I use a Java 8 stream to wrap the Spring data's &lt;code&gt;findAll()&lt;/code&gt; and in turn, wrap each one into a &lt;code&gt;QuoteResource&lt;/code&gt;. The results are turned into a &lt;code&gt;List&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To fetch a single quote, it first tests if a given id exists. If not, return &lt;code&gt;NONE&lt;/code&gt;. Otherwise, return a wrapped quote.&lt;/p&gt;

&lt;p&gt;Finally, to fetch a random quote, I use Java 8's &lt;code&gt;Random&lt;/code&gt; utility inside the &lt;code&gt;nextLong()&lt;/code&gt; utility method to fetch a &lt;code&gt;Long&lt;/code&gt; with the &lt;code&gt;lowerRange&lt;/code&gt; and &lt;code&gt;upperRange&lt;/code&gt;, inclusively.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;QUESTION:&lt;/strong&gt; Why am I using &lt;code&gt;QuoteResource&lt;/code&gt;? &lt;code&gt;Quote&lt;/code&gt; is the core domain object returned by the &lt;code&gt;QuoteRepository&lt;/code&gt;. To match the previous public API, I wrap each instance in a &lt;code&gt;QuoteResource&lt;/code&gt; which includes a &lt;strong&gt;status&lt;/strong&gt; code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
&lt;a name="user-content-testing-the-results" class="anchor" href="#testing-the-results" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Testing the results&lt;/h4&gt;

&lt;p&gt;With this in place, the default &lt;code&gt;Application&lt;/code&gt; class created by &lt;a href="http://start.spring.io"&gt;http://start.spring.io&lt;/a&gt; was ready to run.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl localhost:8080/api/random
{
    type: "success",
    value: {
        id: 1,
        quote: "Working with Spring Boot is like pair-programming with the Spring developers."
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ta dah! &lt;/p&gt;

&lt;p&gt;To wrap things up, I built the JAR file and pushed it up to &lt;a href="https://run.pivotal.io/"&gt;Pivotal Web Services&lt;/a&gt;. You can view the site yourself at &lt;a href="http://gturnquist-quoters.cfapps.io/api/random"&gt;http://gturnquist-quoters.cfapps.io/api/random&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Suffice it to say, I was able to tweak the &lt;a href="https://spring.io/guides/gs/messaging-reactor/"&gt;Reactor guide&lt;/a&gt; by altering &lt;a href="https://github.com/spring-guides/gs-messaging-reactor/blob/master/complete/src/main/java/hello/Receiver.java#L21"&gt;ONE LINE OF CODE&lt;/a&gt;. With that in place, I did some other clean up of the content and was done!&lt;/p&gt;

&lt;p&gt;To see the code, please visit &lt;a href="https://github.com/gregturn/quoters"&gt;https://github.com/gregturn/quoters&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
&lt;a name="user-content-outstanding-issues" class="anchor" href="#outstanding-issues" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Outstanding issues&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;This RESTful service satisfies &lt;a href="http://martinfowler.com/articles/richardsonMaturityModel.html#level2"&gt;Level 2 - HTTP Verbs&lt;/a&gt; of the Richardson Maturity Model. While good, it's best to shoot for &lt;a href="http://martinfowler.com/articles/richardsonMaturityModel.html#level3"&gt;Level 3 - Hypermedia&lt;/a&gt;. With &lt;a href="http://projects.spring.io/spring-hateoas"&gt;Spring HATEOAS&lt;/a&gt;, it's easier than ever to add hypermedia links. Stay tuned.&lt;/li&gt;
&lt;li&gt;There is no friendly web page. This would be nice, but it isn't required.&lt;/li&gt;
&lt;li&gt;Content is fixed and defined inside the app. To make content flexible, we would need to open the door to POSTs and PUTs. This would introduce the desire to also secure things properly.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;These are some outstanding things that didn't fit inside the time budget and weren't required to solve the original problem involving the Reactor guide. But they are good exercises you can explore! You can clone the project in github and take a shot at it yourself!&lt;/p&gt;

&lt;h3&gt;
&lt;a name="user-content-springone-2gx-2014" class="anchor" href="#springone-2gx-2014" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;SpringOne 2GX 2014&lt;/h3&gt;

&lt;p&gt;Book your place at &lt;a href="https://2014.event.springone2gx.com/register"&gt;SpringOne&lt;/a&gt; in Dallas, TX for Sept 8-11 soon. It's simply the best opportunity to find out first hand all that's going on and to provide direct feedback. You can see myself and Roy Clarkson talk about &lt;a href="https://2014.event.springone2gx.com/schedule/sessions/spring_data_rest_data_meets_hypermedia.html"&gt;Spring Data REST - Data Meets Hypermedia&lt;/a&gt; to see how to merge Spring Data and RESTful services.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Preview Spring Security WebSocket Support</title>
    <link rel="alternate" href="https://spring.io/blog/2014/08/21/preview-spring-security-websocket-support" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Rob Winch</name>
    </author>
    <id>tag:spring.io,2014-08-18:1733</id>
    <updated>2014-08-21T16:22:00Z</updated>
    <content type="html">&lt;h2&gt;
&lt;a name="user-content-introduction" class="anchor" href="#introduction" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Previously, an application could use Spring Security to perform authentication in a WebSocket application. This worked because the &lt;code&gt;Principal&lt;/code&gt; of an &lt;code&gt;HttpServletRequest&lt;/code&gt; will be propagated to the WebSocket Session.&lt;/p&gt;

&lt;p&gt;The problem is that authorization was limited to handshake. This means that once the connection was made, there was no way to provide any granularity to authorization of the WebSocket application.&lt;/p&gt;

&lt;h2&gt;
&lt;a name="user-content-using-spring-securitys-messaging-support" class="anchor" href="#using-spring-securitys-messaging-support" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Using Spring Security's Messaging Support&lt;/h2&gt;

&lt;p&gt;Spring Security 4.0.0.M2 has introduced authorization support for WebSockets through the Spring Messaging abstraction. To provide authorization, simply extend the &lt;code&gt;AbstractSecurityWebSocketMessageBrokerConfigurer&lt;/code&gt; and configure the &lt;code&gt;MessageSecurityMetadataSourceRegistry&lt;/code&gt;. For example:&lt;/p&gt;

&lt;div class="highlight highlight-java"&gt;&lt;pre&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;WebSocketSecurityConfig&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt;
          &lt;span class="n"&gt;AbstractSecurityWebSocketMessageBrokerConfigurer&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;configure&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MessageSecurityMetadataSourceRegistry&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;messages&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;destinationMatchers&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/user/queue/errors"&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;permitAll&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;anyMessage&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;hasRole&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"USER"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;div class="callout"&gt;
&lt;div class="callout-title"&gt;Direct JSR-356 Support&lt;/div&gt;
We have entertained integrating directly with JSR-356. However, at this time it is very difficult since JSR-356 is very low level and currently does not provide the abstractions necessary.
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;This will ensure that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;/user/queue/errors&lt;/code&gt; destination can be accessed by any user&lt;/li&gt;
&lt;li&gt;Any other Message can only be accessed by users with the role of &lt;code&gt;ROLE_ADMIN&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;
&lt;a name="user-content-method-security-and-websockets" class="anchor" href="#method-security-and-websockets" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Method Security and WebSockets&lt;/h2&gt;

&lt;p&gt;We can also use method security with WebSockets. For example, the following method can only be invoked by a user with the role &lt;code&gt;ROLE_ADMIN&lt;/code&gt;:&lt;/p&gt;

&lt;div class="highlight highlight-java"&gt;&lt;pre&gt;    &lt;span class="nd"&gt;@PreAuthorize&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"hasRole('ROLE_ADMIN')"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nd"&gt;@MessageMapping&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/trade"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;executeTrade&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Trade&lt;/span&gt; &lt;span class="n"&gt;trade&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Principal&lt;/span&gt; &lt;span class="n"&gt;principal&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;
&lt;a name="user-content-sample-application" class="anchor" href="#sample-application" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Sample Application&lt;/h2&gt;

&lt;p&gt;You can find a complete example, of authorization in the security branch of &lt;a href="https://github.com/rwinch/spring-websocket-portfolio/tree/security"&gt;rwinch/spring-websocket-portfolio&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
&lt;a name="user-content-what-next" class="anchor" href="#what-next" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;What Next?&lt;/h2&gt;

&lt;p&gt;While this resolves our authorization problems, we still are missing a good mechanism to keep our &lt;code&gt;HttpSession&lt;/code&gt; alive when sending messages over WebSockets. In the next post, I will discuss in more detail what these problems are and how Spring Session can alleviate these problems.&lt;/p&gt;

&lt;p&gt;&lt;div class="callout"&gt;
&lt;div class="callout-title"&gt;SpringOne 2GX 2014 is around the corner&lt;/div&gt;
Book your place at &lt;a href="https://2014.event.springone2gx.com/register"&gt;SpringOne&lt;/a&gt; in Dallas, TX for Sept 8-11 soon. It's simply the best opportunity to find out first hand all that's going on and to provide direct feedback. &lt;a href="https://2014.event.springone2gx.com/schedule/sessions/from_0_to_spring_security_4_0.html"&gt;From 0 to Spring Security 4.0&lt;/a&gt; session will contain detailed information on how to get started with Spring Security and provide a deep dive into the new features found in Spring Security 4. Of course there plenty of other &lt;a href="https://2014.event.springone2gx.com/schedule/2014-09-09"&gt;exciting Spring related talks&lt;/a&gt;!
&lt;/div&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring-19th August 2014</title>
    <link rel="alternate" href="https://spring.io/blog/2014/08/19/this-week-in-spring-19th-august-2014" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2014-08-19:1740</id>
    <updated>2014-08-19T02:05:00Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! It's a few weeks before &lt;a href="http://springone2gx.com/"&gt;SpringOne2GX 2014&lt;/a&gt;, already! Time sure flies when you're having fun! The beginning of 2015 will mark the &lt;em&gt;4th&lt;/em&gt; year of &lt;em&gt;This Week in Spring&lt;/em&gt;, and it's more exciting every week! I'm hoping to see as many of you as possible at SpringOne2GX 2014. This is sure to be an amazing event. &lt;/p&gt;

&lt;p&gt;Anyway, with that out of the way, let's get on to this week's roundup!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Spring Security lead Rob Winch just announced   &lt;a href="http://spring.io/blog/2014/08/18/spring-security-4-0-0-m2-released"&gt; Spring Security 4.0.0.M2&lt;/a&gt;, which&lt;br&gt;
provides a &lt;em&gt;lot&lt;/em&gt; of great features, including improved Security-aware testing support, Spring Data integration, support for websocket security, and ties into the nascent Spring Session projet that was derived from the work for this release. Check it out! Rob also announced &lt;a href="http://spring.io/blog/2014/08/15/cve-2014-3527-fixed-in-spring-security-3-2-5-and-3-1-7"&gt;Spring Security 3.2.5 and 3.1.7&lt;/a&gt; which is a fix that closes a few potential security holes. This is good stuff, all around!&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://spring.io/blog/2014/08/15/spring-framework-4-1-rc2-released"&gt;Spring framework 4.1.RC2 just dropped&lt;/a&gt;. Spring 4.1 is &lt;em&gt;very&lt;/em&gt; near completion, so be sure to check out the latest and greatest bits in this release! &lt;/li&gt;
&lt;li&gt;Christoph Strobl just announced &lt;a href="http://spring.io/blog/2014/08/13/first-release-candidate-of-spring-data-release-train-evans-available"&gt; the first RC for the Spring Data Evans release train&lt;/a&gt;. The new release includes a lot of features, including text search integration for Spring Data MongoDB, improved multistore support, configuration options for Redis sentinels, and much more.&lt;/li&gt;
&lt;li&gt;Our friends at Codecentric have just announced a new cut of their &lt;a href="http://blog.codecentric.de/en/2014/08/spring-boot-starter-batch-web-1-2-0-released/"&gt;custom Spring Boot autoconfiguration for Spring Batch&lt;/a&gt;.   This implementation is different   than the auto-configuration provided out of the box with Spring Boot, and includes support for JSR 352.&lt;br&gt;
&lt;/li&gt;
&lt;li&gt;Netflix Developer Dan Woods recently gave a nice talk looking at what they hope &lt;a href="http://www.slideshare.net/danveloper/future-of-grails"&gt; to get out of the Spring Boot-based Grails 3&lt;/a&gt;, and the slide deck is definitely worth a look.&lt;/li&gt;
&lt;li&gt;The Being Java Guys blog has a nice post on  how to build a REST service with Spring 4 and Hibernate 4. The example uses &lt;code&gt;web.xml&lt;/code&gt; and Spring XML configuration. It's a working recipe, but I hope readers will remember that you &lt;a href="http://www.beingjavaguys.com/2014/08/spring-restful-web-services.html"&gt; can get the same done with Spring Boot in &lt;em&gt;much&lt;/em&gt; less time&lt;/a&gt; and code.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://docs.oracle.com/middleware/1213/wls/SPRNG/intro.htm#BHCDGJFA"&gt;Oracle has particular support for Spring-based applications in WebLogic 12.1.3&lt;/a&gt; which, I confess, I didn't know about. This is a pretty interesting read if you're on WebLogic. &lt;/li&gt;
&lt;li&gt; &lt;a href="http://tirthalpatel.blogspot.com/2014/08/executive-view-of-spring-io.html"&gt;Tirthal's Java cafe blog takes a look at the recently announced Spring IO&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt; This &lt;a href="http://laptrinh.vn/d/3974-huong-dan-tao-javaee-project-voi-spring-framework"&gt;Vietnamese-language post on building a simple Spring-based web application&lt;/a&gt; was pretty straightforward, and worth a read. &lt;/li&gt;
&lt;li&gt;This  post introduces how to &lt;a href="http://lalit-bhatt.blogspot.com/2014/08/spring-security-gwt-integration.html"&gt;integrate Spring Security 3.0.4 and GWT&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;</content>
  </entry>
  <entry>
    <title>Spring Security 4.0.0.M2 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2014/08/18/spring-security-4-0-0-m2-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Rob Winch</name>
    </author>
    <id>tag:spring.io,2014-08-18:1732</id>
    <updated>2014-08-18T18:33:00Z</updated>
    <content type="html">&lt;p&gt;I'm pleased to announce the release of Spring Security 4.0.0.M2 available in the &lt;a href="http://docs.spring.io/spring-security/site/docs/4.0.0.M2/reference/htmlsingle/#get-spring-security"&gt;Spring Milestone repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;div class="callout"&gt;
&lt;div class="callout-title"&gt;SpringOne 2GX 2014 is around the corner&lt;/div&gt;
Book your place at &lt;a href="https://2014.event.springone2gx.com/register"&gt;SpringOne&lt;/a&gt; in Dallas, TX for Sept 8-11 soon. It's simply the best opportunity to find out first hand all that's going on and to provide direct feedback. &lt;a href="https://2014.event.springone2gx.com/schedule/sessions/from_0_to_spring_security_4_0.html"&gt;From 0 to Spring Security 4.0&lt;/a&gt; session will contain detailed information on how to get started with Spring Security and provide a deep dive into the new features found in Spring Security 4. Of course there plenty of other &lt;a href="https://2014.event.springone2gx.com/schedule/2014-09-09"&gt;exciting Spring related talks&lt;/a&gt;!
&lt;/div&gt;&lt;/p&gt;

&lt;h2&gt;
&lt;a name="user-content-changelog" class="anchor" href="#changelog" aria-hidden="true"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Changelog&lt;/h2&gt;

&lt;p&gt;You can find details about this release in the &lt;a href="https://jira.spring.io/secure/ReleaseNote.jspa?projectId=10040&amp;amp;version=14530"&gt;release notes&lt;/a&gt;. Highlights of the release include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Support for WebSocket Security using Spring's messaging abstraction&lt;/li&gt;
&lt;li&gt;Spring Data integration&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/spring-projects/spring-session"&gt;Spring Session&lt;/a&gt; was produced out of the work necessary for this release. In an application server independent way you can easily use a custom backend (i.e. Redis) as the &lt;code&gt;HttpSession&lt;/code&gt; implementation. See the project page for additional features of this exciting new project.&lt;/li&gt;
&lt;li&gt;Enhancements and fixes to the testing support

&lt;ul&gt;
&lt;li&gt;Easier integration with &lt;code&gt;MockMvc&lt;/code&gt; through &lt;code&gt;SecurityMockMvcConfigurers&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;You no longer need to specify &lt;code&gt;WithSecurityContextTestExecutionListener&lt;/code&gt; on your tests&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;@WithSecurityContext&lt;/code&gt; works even with custom &lt;code&gt;SecurityContextRepository&lt;/code&gt; implementations&lt;/li&gt;
&lt;li&gt;Support for digest and certificate based authentication testing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Support nested static groups in LDAP Authentication&lt;/li&gt;
&lt;li&gt;Lots of integration tests added to the sample applications&lt;/li&gt;
&lt;li&gt;Updated minimum version of Spring 4.1 RC2. This was necessary for enough of the features, that it made sense to do across the board&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Stay tuned to the &lt;a href="http://spring.io/blog"&gt;spring.io blog&lt;/a&gt; for a blog series introducing these exciting new features.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://docs.spring.io/spring-security/site/docs/4.0.0.M2/reference/htmlsingle/"&gt;Reference&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-security/site/docs/4.0.0.M2/apidocs/"&gt;Javadoc&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-security/site/docs/4.0.0.M2/guides/"&gt;Guides&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>CVE-2014-3527 Fixed in Spring Security 3.2.5 and 3.1.7</title>
    <link rel="alternate" href="https://spring.io/blog/2014/08/15/cve-2014-3527-fixed-in-spring-security-3-2-5-and-3-1-7" />
    <category term="releases" label="Releases" />
    <author>
      <name>Rob Winch</name>
    </author>
    <id>tag:spring.io,2014-08-15:1730</id>
    <updated>2014-08-15T21:17:00Z</updated>
    <content type="html">&lt;p&gt;Spring Security 3.2.5 (&lt;a href="https://jira.spring.io/secure/ReleaseNote.jspa?projectId=10040&amp;amp;version=14531"&gt;change log&lt;/a&gt;) and 3.1.7 (&lt;a href="https://jira.spring.io/secure/ReleaseNote.jspa?projectId=10040&amp;amp;version=14401"&gt;change log&lt;/a&gt;) have been released and are available in Maven Central. Important highlights of this release are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This release contains a fix for &lt;a href="https://jira.spring.io/browse/SEC-2688"&gt;CVE-2014-3527&lt;/a&gt; which resolves an issue where a malicious CAS Service can impersonate another CAS Service when using proxy tickets.&lt;/li&gt;
&lt;li&gt;This release updates the transitive dependencies of the cas module to cas-client-core which has a fix for &lt;a href="https://www.mail-archive.com/cas-user@lists.jasig.org/msg17338.html"&gt;CVE-2014-4172&lt;/a&gt;. This issue was not in Spring Security itself, but the library in which it depends on.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;A special thanks to &lt;a href="https://twitter.com/battags"&gt;Scott Battaglia&lt;/a&gt; &amp;amp; the rest of the &lt;a href="http://www.jasig.org/cas/team"&gt;CAS team&lt;/a&gt; for relaying CVE-2014-3527 to the Spring Security team and coordinating with the Spring Security team on the CAS release to resolve CVE-2014-4172.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SpringOne 2GX 2014 is around the corner&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://2014.event.springone2gx.com/register"&gt;Book your place at SpringOne&lt;/a&gt; in Dallas, TX for Sept 8-11 soon. It's simply the best opportunity to find out first hand all that's going on and to provide direct feedback. There will be &lt;a href="https://2014.event.springone2gx.com/schedule/2014-09-09"&gt;deep dive sessions&lt;/a&gt; on the latest updates to Spring, Groovy, and Grails!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Framework 4.1 RC2 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2014/08/15/spring-framework-4-1-rc2-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>St?phane Nicoll</name>
    </author>
    <id>tag:spring.io,2014-08-15:1729</id>
    <updated>2014-08-15T09:18:12Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team I am pleased to announce the second release candidate of Spring Framework 4.1 is now available from our &lt;a href="http://repo.spring.io/milestone/"&gt;milestone repository&lt;/a&gt;. This release includes &lt;a href="https://jira.spring.io/browse/SPR/fixforversion/14397/?selectedTab=com.atlassian.jira.jira-projects-plugin:version-issues-panel"&gt;over 70 fixes and improvements&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Spring 4.1 is &lt;em&gt;really&lt;/em&gt; coming up soon: please try it out and let us know if you run into any issue. We're looking forward to getting in touch via &lt;a href="https://twitter.com/springcentral"&gt;Twitter&lt;/a&gt;, &lt;a href="http://stackoverflow.com/tags/spring"&gt;StackOverflow&lt;/a&gt; or &lt;a href="https://jira.spring.io/browse/SPR"&gt;JIRA&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SpringOne 2GX 2014 is around the corner&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Book your place at SpringOne in Dallas, TX for Sept 8-11 soon. It's simply the best opportunity to find out first hand all that's going on and to provide direct feedback. There will be deep dive sessions on Spring XD along with general Big Data talks to provide an introduction to the landscape and challenges in developing Big Data applications.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>First Release Candidate of Spring Data Release Train Evans Available</title>
    <link rel="alternate" href="https://spring.io/blog/2014/08/13/first-release-candidate-of-spring-data-release-train-evans-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Christoph Strobl</name>
    </author>
    <id>tag:spring.io,2014-08-13:1725</id>
    <updated>2014-08-13T15:57:00Z</updated>
    <content type="html">&lt;p&gt;We are happy to announce the first release candidate of the Spring Data release train &lt;a href="https://github.com/spring-projects/spring-data-commons/wiki/Release-Train-Evans"&gt;Evans&lt;/a&gt;. We ship the following modules:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Spring Data Commons 1.9 RC1 - &lt;a href="http://repo.spring.io/libs-milestone/org/springframework/data/spring-data-commons/1.9.0.RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/1.9.0.RC1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/1.9.0.RC1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/1.9.0.RC1/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data JPA 1.7 RC1 - &lt;a href="http://repo.spring.io/libs-milestone/org/springframework/data/spring-data-jpa/1.7.0.RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/1.7.0.RC1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/1.7.0.RC1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/1.7.0.RC1/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data MongoDB 1.6 RC1 - &lt;a href="http://repo.spring.io/libs-milestone/org/springframework/data/spring-data-mongodb/1.6.0.RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/1.6.0.RC1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/1.6.0.RC1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/1.6.0.RC1/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data Neo4j 3.2 RC1 - &lt;a href="http://repo.spring.io/libs-milestone/org/springframework/data/spring-data-neo4j/3.2.0.RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/3.2.0.RC1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/3.2.0.RC1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/3.2.0.RC1/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data Solr 1.3 RC1 - &lt;a href="http://repo.spring.io/libs-milestone/org/springframework/data/spring-data-solr/1.3.0.RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/1.3.0.RC1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/1.3.0.RC1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/1.3.0.RC1/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data Couchbase 1.2 RC1 - &lt;a href="http://repo.spring.io/libs-milestone/org/springframework/data/spring-data-couchbase/1.2.0.RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/1.2.0.RC1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/1.2.0.RC1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/1.2.0.RC1/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data Cassandra 1.1 RC1 - &lt;a href="http://repo.spring.io/libs-milestone/org/springframework/data/spring-data-cassandra/1.1.0.RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.1.0.RC1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.1.0.RC1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/1.1.0.RC1/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data Elasticsearch 1.1 RC1 - &lt;a href="http://repo.spring.io/libs-milestone/org/springframework/data/spring-data-elasticsearch/1.1.0.RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/1.1.0.RC1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/1.1.0.RC1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/1.1.0.RC1/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data Gemfire 1.5 RC1 - &lt;a href="http://repo.spring.io/libs-milestone/org/springframework/data/spring-data-gemfire/1.5.0.RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/1.5.0.RC1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/1.5.0.RC1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/1.5.0.RC1/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data Redis 1.4 RC1 - &lt;a href="http://repo.spring.io/libs-milestone/org/springframework/data/spring-data-redis/1.4.0.RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/1.4.0.RC1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/1.4.0.RC1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/1.4.0.RC1/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Spring Data REST 2.2 RC1 - &lt;a href="http://repo.spring.io/libs-milestone/org/springframework/data/spring-data-rest-webmvc/2.2.0.RC1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/2.2.0.RC1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/2.2.0.RC1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/2.2.0.RC1/changelog.txt"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Some of the highlights that happened since the &lt;a href="https://spring.io/blog/2014/07/10/first-milestone-of-spring-data-release-train-evans-available"&gt;first milestone&lt;/a&gt; are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Enhanced &lt;a href="https://jira.spring.io/browse/DATACMNS-526"&gt;multistore support&lt;/a&gt; in case you want to use different stores side by side.&lt;/li&gt;
&lt;li&gt;Support for &lt;a href="https://jira.spring.io/browse/DATACMNS-557"&gt;custom repository implementations when using CDI&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Text search integration for MongoDB repositories.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/spring-projects/spring-data-redis/blob/fd361a186899c2aef124d2801fb78ef733d05baa/src/main/java/org/springframework/data/redis/connection/jedis/JedisConnectionFactory.java#L119"&gt;Configuration options&lt;/a&gt; for Redis sentinels.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://jira.spring.io/browse/DATAES-89"&gt;Geo queries&lt;/a&gt; for Elasticsearch.&lt;/li&gt;
&lt;li&gt;We moved the reference documentation from Docbook to Asciidoctor.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Overall &lt;a href="https://jira.spring.io/issues/?filter=14750"&gt;95 tickets&lt;/a&gt; have be processed so make sure you've booked your place for &lt;a href="http://springone2gx.com/"&gt;SpringOne&lt;/a&gt; in Dallas to find out firsthand what's new in Spring Data. Meanwhile watch out for upcoming blog posts on selected features of this release. The &lt;a href="https://github.com/spring-projects/spring-data-commons/wiki/Release-Train-Evans"&gt;release train wiki page&lt;/a&gt; might be a good start to find out about relevant new stuff as well.&lt;/p&gt;

&lt;p&gt;Got questions? Have feedback? Found a bug? Don't hesitate to contact us! We're looking forward to getting in touch via &lt;a href="http://twitter.com/springdata"&gt;Twitter&lt;/a&gt;, &lt;a href="http://stackoverflow.com/questions/tagged/spring-data"&gt;StackOverflow&lt;/a&gt; or &lt;a href="http://jira.spring.io"&gt;JIRA&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - August 12th, 2014</title>
    <link rel="alternate" href="https://spring.io/blog/2014/08/13/this-week-in-spring-august-12th-2014" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2014-08-13:1724</id>
    <updated>2014-08-13T01:51:42Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;. We've got a &lt;em&gt;lot&lt;/em&gt; of cool stuff happening and, as you might imagine, the entire team is abuzz in preparation for SpringOne2GX 2014, coming in just a few short weeks! If you haven't registered, &lt;a href="http://springone2gx.com"&gt;now's the time to do so&lt;/a&gt;!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Spring Security lead and all-around sleepless ninja Rob Winch has just announced that Spring MVC Test HtmlUnit 1.0.0.M2 has been released. This is an &lt;em&gt;awesome&lt;/em&gt; release if you're trying to &lt;a href="http://spring.io/blog/2014/08/06/spring-mvc-test-htmlunit-1-0-0-m2-released"&gt;unit test real pages with Spring MVC&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://spring.io/blog/2014/08/07/spring-boot-1-1-5-released"&gt;Spring Boot 1.1.5 has just been released&lt;/a&gt;. The new release mainly addresses a few issues and is a recommended upgrade for all users.&lt;/li&gt;
&lt;li&gt;I really enjoyed this blog, &lt;a href="http://www.genbetadev.com/frameworks/que-es-spring-framework"&gt;?Qu? es Spring Framework?&lt;/a&gt;, which tries to explain what the fundamental value of Spring is. Largely, the (Spanish language) article explains that Spring handles the lifecycle for objects in a consistent way. It's easy to plug in various frameworks, software, around the edges when the fundamental life-cycle is handled. I would point out that this post uses Spring 3.0 and XML configuration, which is a bit outdated, though certainly still works. &lt;/li&gt;
&lt;li&gt;The RebelLabs folks are back at it with an interesting look at web framework usage. Check out this &lt;a href="http://zeroturnaround.com/rebellabs/top-4-java-web-frameworks-revealed-real-life-usage-data-of-spring-mvc-vaadin-gwt-and-jsf/"&gt;latest report which has Spring MVC leading &lt;/a&gt;  the charge (by a lot).&lt;/li&gt;
&lt;li&gt;This is a nice post looking at how to use Spring MVC (as part of Spring framework 4.x) to &lt;a href="http://www.concretepage.com/spring-4/spring-4-mvc-single-multiple-file-upload-example-with-tomcat"&gt;handle file uploads&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;Mr. Haki * blog has a nice post &lt;a href="http://mrhaki.blogspot.com/2014/08/gradle-goodness-getting-more-dependency.html"&gt;on analyzing dependencies using Gradle&lt;/a&gt;, with an example based on Spring Boot. &lt;a href="http://start.spring.io"&gt;Spring Boot, of course, is easy to get started with&lt;/a&gt;, can be used with Maven *or&lt;/em&gt; Gradle, and has numerous benefits, not the least of which being that it makes it dead simple to use Spring libraries in your project without worrying about version mismatches. &lt;/li&gt;
&lt;li&gt; Stuck on JAX-RS and JSF? Still want to use Spring Security? This post - &lt;a href="http://ezjsf.blogspot.com/2014/08/javaee-rest-jax-rs-with-spring-security.html"&gt;from the JSF Usefullness post&lt;/a&gt; - has the code snippets that (sort of) demonstrate a path forward. Granted, you'll have an easier time of doing this using straight Spring. No need to add all that extra Java EE weight.. &lt;/li&gt;
&lt;li&gt; This is a sort of oldie-but-a-goodie: a post on how to &lt;a href="http://www.technicalkeeda.com/spring/jquery-ajax-autosave-example-in-spring-mvc"&gt;implement a JQuery-powered autosave example in Spring MVC&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; This is a (particularly tortured) example of &lt;a href="http://www.mastertheboss.com/spring/spring-jdbc-application-on-wildfly"&gt;how to write a Spring application that uses Primefaces and runs on the Wildfly application server&lt;/a&gt;. I don't see why you'd need all this indirection when Spring has good JSF support out of the box. Additionally, there's no reason to recreate the &lt;code&gt;JdbcTemplate&lt;/code&gt; or inject an &lt;code&gt;ApplicationContext&lt;/code&gt; into a bean. Maybe it'll help somebody as a first-cut, though. &lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;So, did I mention &lt;strong&gt;SpringOne2GX 2014&lt;/strong&gt;? It's right around the corner! I'll be there, &lt;a href="http://spring.io/team"&gt;and so will everyone from the Spring team&lt;/a&gt;, so don't miss out. This is going to be an amazing year. I happen to know what some of the keynotes are going to be about. Do &lt;em&gt;not&lt;/em&gt; miss out. &lt;a href="http://springone2gx.com"&gt;Register today&lt;/a&gt;!&lt;/p&gt;</content>
  </entry>
</feed>

